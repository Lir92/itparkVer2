package lesson40;

public class Lecture40NOSQL {
    /*
    TODO:Практика находится в модуле "nosql"

    NoSQL - общее название для БД, не использующих реляционную модель. Название расшифровывается, как "Not Only SQL".
    Данный тип БД получил широкое распространение с популярностью BigData.

    Принципы хранения БД:
        Каждая БД выбирает свои принципы хранения данных
        Одни и теже принципы различаются реализацией в зависимости от типа БД.

    К NoSQL относятся такие типы БД: Key - Value
                                     Column Family
                                     Graph
                                     Document

--- 1) Key - Value -----------------------------------------------------------------------------------------------------
    Основной принцип данного типа БД - Map (HashMap) в Java.
    Данная структура БД очень популярна.
    Хранение данных происходит по ключу, никаких связей между таблицами.
    +++ Плюсом данного типа БД является скорость работы.

    Когда применяется БД Key - Value:
        Хранилище сессий и профилей пользователей;
        Место для хранения количества пользователей онлайн, кодов капч, различных флагов;
        СУБД для небольших приложений - сокращалок ссылок, имиджбордов, возможно даже блогов;
        Хранилище промежуточных результатов вычислений при обработке больших объёмов данных;
        Кэши, индексы и др.

    Примеры K-V БД:
        Redis
        MemcacheDB - рекомендация для знакомства
        Hazelcast
        Riak
        Apache Ignite

    ====================================================== REDIS =======================================================
    плюсы: скорость работы,
           есть возможность постоянного хранения на диске с асинхронной синхронизацией,
           поддержка публикаций и подписок,
           Expire для ключей,
           поддержка транзакций,
           кластеризация и репликация

    Структура:
    Строки (strings) - до 512 мб
    Списки (lists)
    Хэши (hash)
    Множества (sets)
    Упорядоченные множества

    ====================================================================================================================

--- 2) Column Family (Семейства столбцов) ------------------------------------------------------------------------------
    Column Family - табличные БД. Данный вид БД похож на журнал.
                    Часто оптимизированы для хранения упорядоченных по времени данных

    В данных БД все "столбцы" привязаны к какому-то "ключу" и по его вызову выводится вся связанная табличка.

--- 3) Document (Докумен-ориентированные) ------------------------------------------------------------------------------
    Данный тип БД имеет структуру структурированного JSON документа
    Может разница по размеру.
    Может содержать ссылки на другие документы

    Примеры данного типа БД:
    MongoDB
    PostgreSQL
    ElasticSearch (основная особенность - полнотекстовый поиск)
    Informix (хорош для документов)

    Преимущества: - хранение данных в формате JSON
                  -

--- 4) Graph (Граф-ориентированные) ------------------------------------------------------------------------------------
    Особенность данной БД заключается в том, что она построена на графах - узлах и связях между ними - связей больше, чем
    объектов.

    Neo4j

    Области применения:


     */
}
