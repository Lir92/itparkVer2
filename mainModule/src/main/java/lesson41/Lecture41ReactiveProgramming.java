package lesson41;

public class Lecture41ReactiveProgramming {
    /*
    TODO: ознакомиться с Reactive Manifest (Манифест Реактивных Систем)

    Плюсы реактивных систем: устойчивость (при падении одних сервисов, берутся базовые значения и возвращаются пользователю
                                          и система продолжает работать. Также устойчивость позволяет не обрушивать всю
                                          систему при сбоях некоторых сервисов)
                             отзывчивость (дружелюбное взаимодействие с пользователем)
                             гибкость (система работает при разных нагрузках)
                             основанность на обмене сообщениями (система использует асинхронный обмен сообщениями, чтобы
                                           установить границы между компонентами и обеспечить слабую связанность, изоляцию
                                           и прозрачность размещения)

    Фреймворки (подходы) для реактивного подхода: RX Java
                                                  Project React (основан на Spring)

    Reactive Spring Stack:
        Netty
        Project Reactor
        Spring Data Reactive Reactor
        Spring WebFlux - аналог Spring MVC, использующий Project Reactor.
         При переходе на Spring WebFlux необходимо также изменить и репозиторий, который подключён в приложении.

    Фреймворк Netty основа на Jetty и используется не только для взаимодействия HTTP Client-Server, но и для других сетевых
    протоколов. При помощи Netty можно написать свой кастомный ServletContainer.
    В Netty есть поддержка большинства сетевых протоколов, использующихся для Web-приложений. На его основе можно полностью
    написать reactive-приложение.

    Project Reactor - фреймворк для построения реактивных приложений, который не зависит от Spring.

    Реактор можно использовать не только в реактивных приложениях.

    Для работы с реактивными приложениями подходят NoSQL БД, в частности Mongo и Redis.

    Работать с JDBC и реляционными БД невозможно без дополнительных мер в связи с тем, что в реактивных приложениях необ-
    ходимы асинхронные драйверы, а JDBC синхронный.

    Синтаксис Reactive Repository похож на Spring Data.
    Если в вызове возвращается один объект или ни одного, то возвращается метод Mono. Если возвращается несколько - то Flux.

    =====
    Реактивный подход применяется: 1) там, где много легковесных запросов
                                   2) публичный сервис с большой нагрузкой, где быстро нужно дать ответ (приём
                                        банковских платежей, налоговые декларации)


     */
}