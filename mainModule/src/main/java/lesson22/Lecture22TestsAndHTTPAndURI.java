package lesson22;

public class Lecture22TestsAndHTTPAndURI {
    /*
 == Mockito - библиотека для теста, которая может эмулировать вызовы с ожидаемыми значениями.


================================================== Работа с сервером ===================================================

 == HTTP

  ! HTTP - протокол передачи гипертекста: текстовая информация, гиперссылки.

    Разработан в рамках проекта WWW.

    Преимущества HTTP:
    * Простота - текстовый формат легко разбирется;
    * Расширяемость - имеется возможность внедрять собственные заголовки в сообщения протокола;
    * Распространённость - простота и возможность расширения, используется для решения различных задач;
    * Большинстро межсетевых экранов не блокирует HTTP трафик.

    Недостатки HTTP:
    * Большой размер сообщений - использование текстового формата сообщений увеличивает их размер;
    * Не имеет состояния - при обработке каждого запроса сервер ничего не знает о предыдущей истории взаимодействий;
    * Небезопасен - опасность в перехвате текстовых сообщений HTTP и его подмены, анализа и т.д.

    HTTPS - безопасный протокол HTTP.

    Область применения HTTP:
    * Веб-сервисы - программы, предоставляющие доступ к ресурсам в ответ на запрос;
    * Клиенты - программы, отправляющие запросы для получнеия доступа к ресурсам;
    * Прокси-сервера - программы, выполняющие роль посредника м/у клиентами и серверами кэширования ответов на
    поовторяющиеся запросы.

    Методы HTTP запросов:
    Get
    Put
    Post
    Delete

 == URL и URI

  ! URI (Uniform Resource Identifier) - унифицированный идентификатор ресурса.
    URI может ссылаться на ресурсы, недостижимые для java программы.

  ! URL (Uniform Resource Location) - унифицированный указатель ресурса, определяет местополжение ресурса в интернете и
    способ доступа к нему.

    Структура URI:
    схема://логин:пароль@хост:порт/путь?парам=знач[&парам=знач]
    * схема - схема обращения к ресурсу; протокол;
    * логин - имя пользователя для доступа к ресурсу;
    * пароль
    * хост - полностью прописанное доменное имя хоста в системе DNS или IP-адрес;
    * порт - порт хоста для подключения;
    * путь - уточняющая информация о метсе нахождения ресурса (зависит от схемы);
    * парам - имя параметра;
    * знач - значение параметра.

     */
}
